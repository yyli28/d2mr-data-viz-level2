---
title: "Level 2 Data Visualization: Plot the starwars Dataset"
format: html
---

# Objective

The objective of this assignment is to practice constructing simple visualizations using the `ggplot2` package in R by recreating a complex plot. In this Level 2 assignment, you will work with a wrangled version of the `starwars` dataset and perform visualization tasks with minimal instruction. The Level 2 assignment has more opportunities to demonstrating meeting course standards than this Level 1 assignment and is recommended for those who are already comfortable with the tasks in the Level 1 assignment. In particular, this Level 2 assignment requires you to parse and use the `theme()` layer in complicated ways to customize the appearance of your plots.

You may additionally or alternatively complete the [Level 1 Data Visualization assignment](../01_viz-level-1). In Level 1, you will work with a simpler dataset and focus on the most commonly used layers and aesthetics. Most tasks are outlined in the assignment script.

# Instructions

1.  If you have not already done so, pull the latest changes from the `d2mr-assessment` repository to ensure you have the most up-to-date version of the assignment files. Confirm you are working in your clone of the repository.
2.  Open `viz-level-2.qmd` in RStudio (you are here) and follow the instructions in the Setup section below to load and inspect a wrangled version of the `starwars` dataset.

-   **Note:** The plot uses the same dataset created in the [Level 1 Data Wrangling assignment](../02_data-wrangling/01_recreate-level-1), so you have 3 options for your starting data. These options are outlined below before the chunk where you read in data.

3.  In the chunk provided, create the plot as shown in the `terrible-starwars.png` file. You may need to render this notebook to see the image, or you can open the file directly. Recreate the plot as closely as possible, noting where you get stuck or have questions.

-   **Note:** The image file is included in the assessment repo in the `03_data-viz/02_viz-level-2/` folder. If you don't see the file, you may have something in your .gitignore preventing it from being pulled. You can either edit your .gitignore to allow the file to be pulled or download the file directly from the GitHub repository.

4.  At several points in this document you will come across questions or non-coding exercises. Answer these questions in the text of this .qmd document, immediately below the question.
5.  *Optional:* Create additional plots using the `sw.wrangled` dataset or extend the plot above. Add your code to the "Optional plotting" section at the end of the document. Do not add this optional work to the main code chunks that recreate the plot images.

## Setup

```{r}

#| label: libraries-seed

# Load any packages necessary for data wrangling and visualization

library(tidyverse)  # Includes ggplot2, dplyr, tidyr, readr, etc.
library(ggplot2)    # For data visualization
library(dplyr)      # For data manipulation
library(tidyr)      # For reshaping data
library(readr)      # For reading data

# Set a seed for reproducibility - leave this
set.seed(123)
```

Choose from one of three options to read in and inspect the starwars data.

1.  Complete the Level 1 Data Wrangling assignment if you haven't already and use that dataset here. Include the full code in the "load-and-inspect-data" chunk rather than writing out and reading in a .csv. You will still ned to complete some data preparation steps in the "data preparation" chunk.
2.  Read in the partially wrangled dataset `sw-wrangled-partial.csv` in this directory. Complete additional data transformation steps in the "data preparation" chunk. This option gives you the chance to practice and demonstrate wrangling skills without having to recreate the whole dataset from scratch.
3.  Read in the fully wrangled dataset `sw-wrangled.csv` in this directory, which is identical to the "goal" file in the Wrangling assignment. You will still need to complete some data preparation steps in the "data preparation" chunk.

```{r}

#| label: load-and-inspect-data

## Select one of the 3 options above and uncomment the code as needed

## Option 1: Create the wrangled starwars dataset with code from the Level 1 Data Wrangling assignment
## Include the full code from the wrangling assignment here

sw.wrangled <- starwars %>%
  select(name, height, mass, hair_color, gender, species, homeworld) %>%
  rename(height_cm = height,
         hair = hair_color) %>%
  filter(!is.na(height_cm)) %>%
  separate(name, into = c("first_name", "last_name"), sep = " ", extra = "merge") %>%
  mutate(hair = as.character(hair)) %>%
  mutate(hair = replace_na(hair, "bald")) %>%
  mutate(
    gender = tolower(substr(as.character(gender), 1, 1)),
    species = toupper(as.character(species))
  ) %>%
  mutate(across(c(hair, gender, species, homeworld), factor)) %>%
  mutate(height_in = as.numeric(format(height_cm*0.3937, digits = 6))) %>%
  mutate(brown_hair = str_detect(hair, "brown")) %>%
  mutate(initials = paste0(
    substr(first_name, 1, 1),
    substr(last_name, 1, 1)
  )) %>%
  select(first_name, last_name, initials, height_in, height_cm, mass, 
         hair, gender, species, homeworld, brown_hair) %>%
  arrange(last_name, first_name)

## Option 2: Load the partially wrangled starwars dataset
#sw.wrangled <- read_csv("sw-wrangled-partial.csv") # You may need to change this relative path


## Option 3: Load the wrangled starwars dataset
#sw.wrangled <- read_csv("sw-wrangled.csv") # You may need to change this relative path



## Look at the structure and first few rows of the sw.wrangled dataset
str(sw.wrangled)
head(sw.wrangled)


```

To understand exactly what you're working with, you should also view the original `starwars` dataset. If you completed the Level 1 Data Wrangling assignment, you should have a good idea of how the data was transformed. If you did not complete that assignment, take a minute to identify the differences between the original and wrangled datasets.

Consider the structure of the dataset, particularly the datatypes of each variable. Not all variables are in the most appropriate format for analysis or visualization.

Examine the `terrible-starwars.png` plot in the `03_data-viz/02_viz-level-2/` folder. This plot is a terrible visualization of the `sw.wrangled` dataset. Just absolutely awful. Really really bad in a lot of ways, both content and visuals. Really take it in. Remember that you may need to render this notebook to see the image, or you can open the file directly.

![Terrible starwars plot](terrible-starwars.png)

QUESTIONS:

1.  What differences exist between the original `starwars` dataset and the `sw.wrangled` dataset? What transformations were made to the data?

<!-- answer below -->

Differences: Names in the original dataset only take one column, while names are splitted into three columns including first_name, last_name, initials. There are two more columns height_in and brown_hair.

Transfomations: I Selected specific columns: name, height, mass, hair_color, gender, species, and homeworld. I removed column 'height' and added two columns 'height_cm' and 'height_inch'. I removed rows with missing height values. I split the 'name' column into 'first_name' and 'last_name'. I created 'initials' column by combining first letters of first and last names. I converted hair, gender, species, and homeworld to factor type. I ddded 'height_in' column by converting height_cm to inches (multiplied by 0.3937).

2.  What is the most appropriate data type for each variable in the `sw.wrangled` dataset? Are there any variables that should be treated as factors? If so, what are levels and are they ordered or unordered?

<!-- answer below -->

Character variables: first_name, last_name, initials
Numeric variables: height_in, height_cm, mass
Factors: 
  1. hair (unordered)
    levels: "auburn", "auburn, grey", "auburn, white", "bald", "black", "blond", "blonde", "brown", "brown, grey", "grey", "none", "white"
  2. gender (unordered )
    levels: "f", "m", NA
  3. species (unordered )
    levels: 
  4. homeworld (unordered)
    levels: 


3.  Examine the `terrible-starwars.png` plot and consider its relationship to the `sw.wrangled` dataset. What structures of the dataset are mapped onto the plot? What parts of the plot are not data-dependent in the dataset? Are there any data-dependent elements of the plot that do not directly map from the dataset?

<!-- answer below -->

## Data preparation

Based on your inspection of the `sw.wrangled` and `starwars` datasets and your answers to the above questions, use `dplyr`, `tidyr`, and `forcats` functions to prepare the dataset for visualization.

You will need to change the data types for some variables. You may also want to rename variables and factor levels for clarity. Renaming variables and levels now can make your visualization simpler later, but you can do it directly in the your plotting functions, too.

```{r}

#| label: data-preparation

## Prepare the starwars dataset for visualization

## Assign your wrangled data to a new object `sw.voz` so you have access 
## to the original if needed


sw.viz <- sw.wrangled %>%
  # Optionally, rename variables for clarity


  # Change data types as needed
  # Optionally, rename factor levels for clarity as needed

  # Perform any other data preparation steps needed for visualization


```

## Recreate the terrible plot

Take another good look at the very, very bad plot:

![Terrible starwars plot](terrible-starwars.png)

Recreate this plot as closely as possible using the `sw.viz` dataset you just created.

Before you begin, consider the following questions:

1.  What additional transformation, if any, do you need to make to the data before piping it into `ggplot()`? (In this case, since you're only making one plot, anything you identify here could be done in the data prep chunk above.)

<!-- answer below -->

2.  What geoms and aesthetics are used in this plot? Does layer order matter, and if so, how?

<!-- answer below -->

3.  What additional information is required to produce this plot? What layers or aesthetics would you need to add to the plot to include this information?

<!-- answer below -->

4.  With as much specificity as possible, describe the appearance of the plot. What is the overall structure of the plot? What elements are included that are not data-dependent? What colors, shapes, and sizes are used? What's going on with the text and font? The axes? The grid? The legend? Anything else?

```{r}

#| label: recreate-starwars-plot

# Include frequent and informative comments throughout your code!
# I recommend *starting* with the comments and then filling in the code between them
# not the other way around

# If you wrote the same code I did, you will probably get a warning and/or message (not an error)
# If you do, note whether you want to ignore it or address it

# sw.viz %>% ...

```

# Review

1.  How much of the plot were you able to reproduce successfully? Did you encounter any challenges along the way? What were the most difficult parts of the plot to recreate?

<!-- answer below -->

2.  Were there any elements you were not able to reproduce? What additional information or skills would you need to complete the plot? What did you try, and why don't you think it worked?

<!-- answer below -->

# Optional plotting

## Free plotting

If you have time and would like to practice more, try creating one or more plots of own design using the `sw.viz` dataset or adding to the plot above. You can use any combination of geoms, aesthetics, and layers you like. Whether you start from scratch or build on an existing plot, create your plots in code chunks below. (Leave the chunk above as your work recreating the plot as-is.)

For each optional plot you create or extend, include a brief description of the plot below the chunk and any additional information you think is relevant.

```{r}

#| label: optional-plot-1

## Your code here

```

## Improved plotting

The terrible plot you recreated is, well, terrible. It's a good example of what not to do when creating visualizations. If you have time and would like to practice more, try creating an improved version of the plot. You can change the geoms, aesthetics, and layers, or you can focus on improving the plot's appearance and readability.

What are the biggest issues with the very bad plot? Why are the bad? Which are most egrious? What changes would you make to improve the plot?

<!-- answer below -->

```{r}

#| label: improved-plot



```

If you plotted an improvement, what did you do? Why? Were there any improvements you'd like to make that you weren't able to?

<!-- answer below -->

# Submission & Assessment

To submit:

1.  Add & modify the `assessment.md` in this mini-project's directory:
    1.  Check off all objectives you believe you have demonstrated
    2.  Indicate which objectives you are meeting for the first time (if any)
    3.  Complete any relevant open-ended items
2.  Push your changes to your centralized assignment repository on GitHub.
3.  Confirm that Dr. Dowling and your section TA are added as collaborators to your repository.
4.  Submit your work in your next open mini-project assignment by including the following information in the text box:
    1.  The title of the assignment: "Level 2 Data Visualization: Plot the starwars Dataset"
    2.  A link to the **directory** for this assignment in your centralized assignment repo
